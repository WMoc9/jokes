{"ast":null,"code":"var _jsxFileName = \"/Users/wmoc9/Desktop/http-requests-starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport JokeList from \"./components/JokeList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const dummyJokes = [\n  //   {\n  //     id: 1,\n  //     type: \"general\",\n  //     setup: \"What do you call a bee that lives in America?\",\n  //     punchline: \"A USB.\",\n  //   },\n  //   {\n  //     id: 2,\n  //     type: \"programming\",\n  //     setup: \"What's the best thing about a Boolean?\",\n  //     punchline: \"Even if you're wrong, you're only off by a bit.\",\n  //   },\n  // ];\n\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  async function fetchJokesHandler() {\n    setIsLoading(true);\n    const response = await fetch(\"https://official-joke-api.appspot.com/random_ten\");\n    const data = await response.json();\n    setJokes(data);\n    setIsLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchJokesHandler,\n        children: \"Fetch Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(JokeList, {\n        jokes: jokes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u043A\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0448\\u0443\\u0442\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6+UGc52zAYCoA2pGCaiMBnfurn4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","JokeList","jsxDEV","_jsxDEV","App","_s","jokes","setJokes","isLoading","setIsLoading","fetchJokesHandler","response","fetch","data","json","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wmoc9/Desktop/http-requests-starter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport JokeList from \"./components/JokeList\";\nimport \"./App.css\";\n\nfunction App() {\n  // const dummyJokes = [\n  //   {\n  //     id: 1,\n  //     type: \"general\",\n  //     setup: \"What do you call a bee that lives in America?\",\n  //     punchline: \"A USB.\",\n  //   },\n  //   {\n  //     id: 2,\n  //     type: \"programming\",\n  //     setup: \"What's the best thing about a Boolean?\",\n  //     punchline: \"Even if you're wrong, you're only off by a bit.\",\n  //   },\n  // ];\n\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchJokesHandler() {\n    setIsLoading(true);\n    const response = await fetch(\n      \"https://official-joke-api.appspot.com/random_ten\"\n    );\n    const data = await response.json();\n    setJokes(data);\n    setIsLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchJokesHandler}>Fetch Jokes</button>\n      </section>\n      <section>\n        {!isLoading && <JokeList jokes={jokes} />}\n        {isLoading && <p>Закгрузка шуток</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,eAAeU,iBAAiBA,CAAA,EAAG;IACjCD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kDACF,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCP,QAAQ,CAACM,IAAI,CAAC;IACdJ,YAAY,CAAC,KAAK,CAAC;EACrB;EAEA,oBACEN,OAAA,CAACJ,KAAK,CAACgB,QAAQ;IAAAC,QAAA,gBACbb,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAQc,OAAO,EAAEP,iBAAkB;QAAAM,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACVlB,OAAA;MAAAa,QAAA,GACG,CAACR,SAAS,iBAAIL,OAAA,CAACF,QAAQ;QAACK,KAAK,EAAEA;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxCb,SAAS,iBAAIL,OAAA;QAAAa,QAAA,EAAG;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAChB,EAAA,CAxCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}